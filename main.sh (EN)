#!/bin/bash

# Initialize variables
wordlist=""
url=""
verbose=false
user_agent="PriscaAutiste"
output_dir="$HOME/Desktop"
output_file="$output_dir/diretorios_encontrados.txt"

# Function to display usage information
usage() {
  echo "Usage: $0 -w <wordlist> -u <URL> [-v]"
  exit 1
}

# Function to handle script interruption
interrupt() {
  echo "Script interrupted. Partial results saved in $output_file"
  exit 1
}

# Parse command-line arguments
while getopts "w:u:v" opt; do
  case $opt in
    w)
      wordlist=$OPTARG
      ;;
    u)
      url=$OPTARG
      ;;
    v)
      verbose=true
      ;;
    \?)
      echo "Invalid option: -$OPTARG"
      usage
      ;;
  esac
done

# Check for missing required arguments
if [ -z "$wordlist" ] || [ -z "$url" ]; then
  usage
fi

# Check if the specified wordlist file exists
if [ ! -f "$wordlist" ]; then
  echo "Error: The wordlist '$wordlist' does not exist."
  exit 1
fi

# Create the output directory if it doesn't exist
mkdir -p "$output_dir"

# Function to print verbose messages if -v option is used
print_verbose() {
  if [ "$verbose" = true ]; then
    echo "$1"
  fi
}

# Trap the SIGINT signal (Ctrl+C) to handle script interruption
trap interrupt SIGINT

# Remove any existing output file
rm -f "$output_file"

# Loop through each line in the wordlist file
while read -r tent; do
  # Send a request to the URL with the current directory from the wordlist
  resultado=$(curl -s -o /dev/null -w "%{http_code}" -A "$user_agent" -L "$url/$tent")
  if [ "$resultado" == "200" ]; then
    echo "Directory Found: $tent"
    echo "$url/$tent" >> "$output_file"
  elif [ "$resultado" != "301" ]; then
    print_verbose "Trying: $url/$tent [HTTP Code: $resultado]"
  fi
done < "$wordlist"

# Check if the output file is empty
if [ ! -s "$output_file" ]; then
  echo "No directories found."
  rm -f "$output_file"
  exit 0
fi

# Display completion message with the output file path
echo "Scan completed. Results saved in $output_file."
